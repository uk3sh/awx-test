---
# playbooks/create_droplet_from_snapshot.yml

- name: Create a Droplet from a Snapshot in a Specific Team
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    # Name your droplet however you like
    droplet_name: my-snapshot-droplet-4

    # Choose your region and size slugs
    region: nyc3
    size: s-2vcpu-4gb

    # The snapshot identifier (UUID or slug)
    snapshot_id: "200915068"

    # Point this at a token that has access to your target team
    do_team_token: "{{ DIGITALOCEAN_TOKEN }}"

  tasks:
    - name: Create Droplet from Snapshot
      # Tell the module to use your team token via the env var
      community.digitalocean.digital_ocean_droplet:
        api_token: "{{ do_team_token }}"
        name: "{{ droplet_name }}"
        region: "{{ region }}"
        size: "{{ size }}"
        image: "{{ snapshot_id }}"
        unique_name: true
        timeout: 500
      register: my_droplet

    - name: Show Droplet info
      ansible.builtin.debug:
        msg: |
          Droplet ID is {{ my_droplet.data.droplet.id }}
          IPv4 is {{ (my_droplet.data.droplet.networks.v4 | selectattr('type', 'equalto', 'public')).0.ip_address }}

    # - name: Tag a resource; creating the tag if it does not exist
    #   community.digitalocean.digital_ocean_tag:
    #     oauth_token: "{{ do_team_token }}"
    #     resource_id: "{{ my_droplet.droplet.id }}"
    #     name: pmpro-hosting-alpha
    #     state: present

    # - name: Create a record using api token
    #   community.general.cloudflare_dns:
    #     zone: pmpro.site
    #     record: "{{ droplet_name }}"
    #     type: A
    #     value: "{{ (my_droplet.droplet.networks.v4 | selectattr('type', 'equalto', 'public')).0.ip_address }}"
    #     api_token: "{{ CF_TOKEN }}"
